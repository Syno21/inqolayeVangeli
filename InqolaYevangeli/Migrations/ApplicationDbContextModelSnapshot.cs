// <auto-generated />
using System;
using InqolaYevangeli.data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InqolaYevangeli.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InqolaYevangeli.Models.Entities.Members+Activity", b =>
                {
                    b.Property<int>("ActivityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActivityID"));

                    b.Property<int>("BranchID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ActivityID");

                    b.HasIndex("BranchID");

                    b.ToTable("Activity");
                });

            modelBuilder.Entity("InqolaYevangeli.Models.Entities.Members+ActivityHistory", b =>
                {
                    b.Property<int>("ActivityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActivityID"));

                    b.Property<string>("ActivityType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DateOfActivity")
                        .HasColumnType("datetime2");

                    b.Property<int>("MemberID")
                        .HasColumnType("int");

                    b.HasKey("ActivityID");

                    b.HasIndex("MemberID");

                    b.ToTable("ActivityHistory");
                });

            modelBuilder.Entity("InqolaYevangeli.Models.Entities.Members+Attendance", b =>
                {
                    b.Property<int>("AttendanceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttendanceID"));

                    b.Property<int>("ActivityID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAttended")
                        .HasColumnType("datetime2");

                    b.Property<int>("MemberID")
                        .HasColumnType("int");

                    b.HasKey("AttendanceID");

                    b.HasIndex("MemberID");

                    b.ToTable("Attendance");
                });

            modelBuilder.Entity("InqolaYevangeli.Models.Entities.Members+Branch", b =>
                {
                    b.Property<int>("BranchID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BranchID"));

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("BranchID");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("InqolaYevangeli.Models.Entities.Members+Demographics", b =>
                {
                    b.Property<int>("DemographicsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DemographicsID"));

                    b.Property<string>("AgeGroup")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("MemberID")
                        .HasColumnType("int");

                    b.HasKey("DemographicsID");

                    b.HasIndex("MemberID");

                    b.ToTable("Demographics");
                });

            modelBuilder.Entity("InqolaYevangeli.Models.Entities.Members+Member", b =>
                {
                    b.Property<int>("MemberID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemberID"));

                    b.Property<int>("BranchID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MemberID");

                    b.HasIndex("BranchID");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("InqolaYevangeli.Models.Entities.Members+MemberStatusHistory", b =>
                {
                    b.Property<int>("StatusHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusHistoryID"));

                    b.Property<DateTime>("DateChanged")
                        .HasColumnType("datetime2");

                    b.Property<int>("MemberID")
                        .HasColumnType("int");

                    b.Property<int>("StatusID")
                        .HasColumnType("int");

                    b.HasKey("StatusHistoryID");

                    b.HasIndex("MemberID");

                    b.HasIndex("StatusID");

                    b.ToTable("MemberStatusHistory");
                });

            modelBuilder.Entity("InqolaYevangeli.Models.Entities.Members+MembershipStatus", b =>
                {
                    b.Property<int>("StatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusID"));

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("StatusID");

                    b.ToTable("MembershipStatuses");
                });

            modelBuilder.Entity("InqolaYevangeli.Models.Entities.Members+User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<int?>("BranchID")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserID");

                    b.HasIndex("BranchID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("InqolaYevangeli.Models.Entities.Members+Activity", b =>
                {
                    b.HasOne("InqolaYevangeli.Models.Entities.Members+Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("InqolaYevangeli.Models.Entities.Members+ActivityHistory", b =>
                {
                    b.HasOne("InqolaYevangeli.Models.Entities.Members+Member", "Member")
                        .WithMany("ActivityHistory")
                        .HasForeignKey("MemberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("InqolaYevangeli.Models.Entities.Members+Attendance", b =>
                {
                    b.HasOne("InqolaYevangeli.Models.Entities.Members+Member", "Member")
                        .WithMany("Attendances")
                        .HasForeignKey("MemberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("InqolaYevangeli.Models.Entities.Members+Demographics", b =>
                {
                    b.HasOne("InqolaYevangeli.Models.Entities.Members+Member", "Member")
                        .WithMany("Demographics")
                        .HasForeignKey("MemberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("InqolaYevangeli.Models.Entities.Members+Member", b =>
                {
                    b.HasOne("InqolaYevangeli.Models.Entities.Members+Branch", "Branch")
                        .WithMany("Members")
                        .HasForeignKey("BranchID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("InqolaYevangeli.Models.Entities.Members+MemberStatusHistory", b =>
                {
                    b.HasOne("InqolaYevangeli.Models.Entities.Members+Member", "Member")
                        .WithMany("StatusHistory")
                        .HasForeignKey("MemberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InqolaYevangeli.Models.Entities.Members+MembershipStatus", "Status")
                        .WithMany("MemberStatusHistory")
                        .HasForeignKey("StatusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("InqolaYevangeli.Models.Entities.Members+User", b =>
                {
                    b.HasOne("InqolaYevangeli.Models.Entities.Members+Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchID");

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("InqolaYevangeli.Models.Entities.Members+Branch", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("InqolaYevangeli.Models.Entities.Members+Member", b =>
                {
                    b.Navigation("ActivityHistory");

                    b.Navigation("Attendances");

                    b.Navigation("Demographics");

                    b.Navigation("StatusHistory");
                });

            modelBuilder.Entity("InqolaYevangeli.Models.Entities.Members+MembershipStatus", b =>
                {
                    b.Navigation("MemberStatusHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
